<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChangeSymbol" xml:space="preserve">
    <value>改变符号</value>
  </data>
  <data name="ChangeCode" xml:space="preserve">
    <value>更改检查点序号</value>
  </data>
  <data name="ChangeControl" xml:space="preserve">
    <value>更改检查点</value>
  </data>
  <data name="ChangeScore" xml:space="preserve">
    <value>更改检查点</value>
  </data>
  <data name="ChangeTitle" xml:space="preserve">
    <value>修改标题</value>
  </data>
  <data name="ChangeClimb" xml:space="preserve">
    <value>改变爬高量</value>
  </data>
  <data name="ChangeCourseName" xml:space="preserve">
    <value>修改线路名称</value>
  </data>
  <data name="ChangeTextLine" xml:space="preserve">
    <value>改变文本行</value>
  </data>
  <data name="ChangeScale" xml:space="preserve">
    <value>更新地图比例尺</value>
  </data>
  <data name="MoveControl" xml:space="preserve">
    <value>移动检查点</value>
  </data>
  <data name="MoveControlNumber" xml:space="preserve">
    <value>移动检查点编号</value>
  </data>
  <data name="MoveObject" xml:space="preserve">
    <value>移动对象</value>
  </data>
  <data name="DeleteControl" xml:space="preserve">
    <value>删除检查点</value>
  </data>
  <data name="DeleteObject" xml:space="preserve">
    <value>删除对象</value>
  </data>
  <data name="DeleteTextLine" xml:space="preserve">
    <value>删除文本行</value>
  </data>
  <data name="AddControl" xml:space="preserve">
    <value>添加检查点</value>
  </data>
  <data name="AddStart" xml:space="preserve">
    <value>添加起点</value>
  </data>
  <data name="AddFinish" xml:space="preserve">
    <value>添加终点</value>
  </data>
  <data name="AddCrossingPoint" xml:space="preserve">
    <value>添加必经通过点</value>
  </data>
  <data name="AddObject" xml:space="preserve">
    <value>添加对象</value>
  </data>
  <data name="DeleteCourse" xml:space="preserve">
    <value>删除线路</value>
  </data>
  <data name="NewCourse" xml:space="preserve">
    <value>新线路</value>
  </data>
  <data name="ChangeCourseProperties" xml:space="preserve">
    <value>更改线路属性</value>
  </data>
  <data name="ChangeAllControlsProperties" xml:space="preserve">
    <value>改变所有检查点的属性</value>
  </data>
  <data name="NewEvent" xml:space="preserve">
    <value>创建新的赛事</value>
  </data>
  <data name="SetLegFlagging" xml:space="preserve">
    <value>设置必经路段</value>
  </data>
  <data name="ChangeCodes" xml:space="preserve">
    <value>换码</value>
  </data>
  <data name="ChangeDisplayedCourses" xml:space="preserve">
    <value>改变显示的线路</value>
  </data>
  <data name="MoveBend" xml:space="preserve">
    <value>弯曲路段</value>
  </data>
  <data name="AddBend" xml:space="preserve">
    <value>添加弯曲</value>
  </data>
  <data name="AddCorner" xml:space="preserve">
    <value>添加拐角</value>
  </data>
  <data name="DeleteBend" xml:space="preserve">
    <value>移除弯曲</value>
  </data>
  <data name="DeleteCorner" xml:space="preserve">
    <value>移除拐角</value>
  </data>
  <data name="AddGap" xml:space="preserve">
    <value>添加间隔</value>
  </data>
  <data name="RemoveGap" xml:space="preserve">
    <value>消除间隔</value>
  </data>
  <data name="MoveGap" xml:space="preserve">
    <value>移动间隔</value>
  </data>
  <data name="Rotate" xml:space="preserve">
    <value>旋转</value>
  </data>
  <data name="AutoNumbering" xml:space="preserve">
    <value>自动编号</value>
  </data>
  <data name="ChangePunchPatterns" xml:space="preserve">
    <value>更改机械打卡器针脚排列</value>
  </data>
  <data name="ChangePunchcardFormat" xml:space="preserve">
    <value>更改机械打卡纸布局</value>
  </data>
  <data name="SetPrintArea" xml:space="preserve">
    <value>设置打印区域</value>
  </data>
  <data name="SetCourseLoad" xml:space="preserve">
    <value>修改参赛者通过量</value>
  </data>
  <data name="SetCustomSymbolText" xml:space="preserve">
    <value>自定义的描述文本</value>
  </data>
  <data name="ChangeCourseOrder" xml:space="preserve">
    <value>改变线路顺序</value>
  </data>
  <data name="ChangeMapFile" xml:space="preserve">
    <value>更改地图文件</value>
  </data>
  <data name="IgnoreMissingFonts" xml:space="preserve">
    <value>忽略缺少字体</value>
  </data>
  <data name="AddTextLine" xml:space="preserve">
    <value>添加的文本行</value>
  </data>
  <data name="RemoveUnusedControls" xml:space="preserve">
    <value>删除未使用的检查点</value>
  </data>
  <data name="SetDescriptionLanguage" xml:space="preserve">
    <value>修改描述语言</value>
  </data>
  <data name="ChangeText" xml:space="preserve">
    <value>更改文字</value>
  </data>
  <data name="ChangeCourseAppearance" xml:space="preserve">
    <value>自定义线路外观</value>
  </data>
  <data name="AddMapExchange" xml:space="preserve">
    <value>添加换图</value>
  </data>
  <data name="DeleteMapExchangeAtControl" xml:space="preserve">
    <value>删除换图</value>
  </data>
  <data name="ChangePartProperties" xml:space="preserve">
    <value>更改线路部分属性</value>
  </data>
  <data name="ChangeLineAppearance" xml:space="preserve">
    <value>改变线的外观</value>
  </data>
  <data name="DuplicateCourse" xml:space="preserve">
    <value>复制路线</value>
  </data>
  <data name="CreateMapFiles" xml:space="preserve">
    <value>创建{0}和文件</value>
  </data>
  <data name="AddVariation" xml:space="preserve">
    <value>添加分支</value>
  </data>
  <data name="DeleteFork" xml:space="preserve">
    <value>删除分支/循环</value>
  </data>
  <data name="RelayTeamVariations" xml:space="preserve">
    <value>接力队分支</value>
  </data>
  <data name="AddMapIssue" xml:space="preserve">
    <value>添加地图关键点</value>
  </data>
  <data name="ChangeDescriptionStandard" xml:space="preserve">
    <value>设置检查点说明规范</value>
  </data>
  <data name="ChangeMapStandard" xml:space="preserve">
    <value>设置制图规范</value>
  </data>
  <data name="Stretch" xml:space="preserve">
    <value>拉伸</value>
  </data>
  <data name="SetLiveloxImportableEventId" xml:space="preserve">
    <value>发布到Livelox</value>
  </data>
  <data name="MoveAllControls" xml:space="preserve">
    <value>移动所有点标</value>
  </data>
  <data name="AddMapFlip" xml:space="preserve">
    <value>添加地图切换</value>
  </data>
</root>