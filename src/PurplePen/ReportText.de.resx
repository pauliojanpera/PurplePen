<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ColumnHeader_Climb" xml:space="preserve">
    <value>Steigung</value>
  </data>
  <data name="ColumnHeader_Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ColumnHeader_Column" xml:space="preserve">
    <value>Spalte</value>
  </data>
  <data name="ColumnHeader_Control" xml:space="preserve">
    <value>Posten</value>
  </data>
  <data name="ColumnHeader_ControlCodes" xml:space="preserve">
    <value>Kontrollcodes</value>
  </data>
  <data name="ColumnHeader_Controls" xml:space="preserve">
    <value>Posten</value>
  </data>
  <data name="ColumnHeader_Course" xml:space="preserve">
    <value>Bahn</value>
  </data>
  <data name="ColumnHeader_Courses" xml:space="preserve">
    <value>Bahnen</value>
  </data>
  <data name="ColumnHeader_Distance" xml:space="preserve">
    <value>Distanz</value>
  </data>
  <data name="ColumnHeader_Item" xml:space="preserve">
    <value>Element</value>
  </data>
  <data name="ColumnHeader_Leg" xml:space="preserve">
    <value>Teilstrecke</value>
  </data>
  <data name="ColumnHeader_Length" xml:space="preserve">
    <value>Länge</value>
  </data>
  <data name="ColumnHeader_Load" xml:space="preserve">
    <value>Auslastung</value>
  </data>
  <data name="ColumnHeader_Location" xml:space="preserve">
    <value>Speicherort</value>
  </data>
  <data name="ColumnHeader_NumberOfCourses" xml:space="preserve">
    <value># Bahnen</value>
  </data>
  <data name="ColumnHeader_Reason" xml:space="preserve">
    <value>Grund</value>
  </data>
  <data name="ColumnHeader_SameSymbol" xml:space="preserve">
    <value>Gleiches Symbol?</value>
  </data>
  <data name="ColumnHeader_Visits" xml:space="preserve">
    <value>Besuche</value>
  </data>
  <data name="CourseSummary_Title" xml:space="preserve">
    <value>Bahnstatistik für {0}</value>
  </data>
  <data name="CrossRef_Title" xml:space="preserve">
    <value>Bahn-Posten Bezüge für {0}</value>
  </data>
  <data name="EventAudit_BothDirectionsLegs" xml:space="preserve">
    <value>Teilstrecke geht in beide Richtungen</value>
  </data>
  <data name="EventAudit_CloseTogetherControls" xml:space="preserve">
    <value>Posten mit geringem Abstand</value>
  </data>
  <data name="EventAudit_CloseTogetherExplanation" xml:space="preserve">
    <value>Die folgende Tabelle listet alle Postenpaare, die weniger als {0} Meter Abstand zueinander haben. Die Spalte "Gleiches Symbol?" zeigt, ob diese beiden Posten die gleiche primäre Symbolbeschreibung haben (Spalte D).</value>
  </data>
  <data name="EventAudit_MissingBoxes" xml:space="preserve">
    <value>Fehlende Postensymbole</value>
  </data>
  <data name="EventAudit_MissingClimb" xml:space="preserve">
    <value>Normalbahnen sollten eine Angabe der Höhenmeter haben</value>
  </data>
  <data name="EventAudit_MissingD" xml:space="preserve">
    <value>Alle Posten müssen eine primäre Symbolbeschreibung in Spalte D haben</value>
  </data>
  <data name="EventAudit_MissingEBetween" xml:space="preserve">
    <value>Wenn "zwischen" in Spalte G gewählt wurde, muss je ein Element in den Spalten D und E stehen</value>
  </data>
  <data name="EventAudit_MissingEJunction" xml:space="preserve">
    <value>Wenn "Gabelung" oder "Kreuzung" in Spalte F gewählt wurde, muss je ein Element in den Spalten D und E stehen</value>
  </data>
  <data name="EventAudit_MissingFinish" xml:space="preserve">
    <value>Normalbahnen sollten am Ende das Zielsymbol (Doppelkreis) haben</value>
  </data>
  <data name="EventAudit_MissingItems" xml:space="preserve">
    <value>Fehlende Objekte in Bahnen</value>
  </data>
  <data name="EventAudit_MissingLoad" xml:space="preserve">
    <value>Bahn sollte eine Angabe zu der erwarteten Läuferanzahl haben</value>
  </data>
  <data name="EventAudit_MissingPunch" xml:space="preserve">
    <value>Design für das Kontrollfeld nicht definiert</value>
  </data>
  <data name="EventAudit_MissingPunchPatterns" xml:space="preserve">
    <value>Design für das Kontrollfeld fehlt</value>
  </data>
  <data name="EventAudit_MissingScore" xml:space="preserve">
    <value>Score-Bahnen sollten Punktbewertungen entweder für alle oder für keinen Posten haben</value>
  </data>
  <data name="EventAudit_MissingScores" xml:space="preserve">
    <value>Fehlende Punktbewertungen</value>
  </data>
  <data name="EventAudit_MissingStart" xml:space="preserve">
    <value>Normalbahnen sollten ein Start-Dreieck haben</value>
  </data>
  <data name="EventAudit_MissingStartScore" xml:space="preserve">
    <value>Score-Bahnen sollten ein Start-Dreieck haben</value>
  </data>
  <data name="EventAudit_No" xml:space="preserve">
    <value>Nein</value>
  </data>
  <data name="EventAudit_NoProblems" xml:space="preserve">
    <value>Keine Fehler gefunden.</value>
  </data>
  <data name="EventAudit_RepeatControl" xml:space="preserve">
    <value>Bahn "{0}" enthält Posten "{1}" zweimal hintereinander.</value>
  </data>
  <data name="EventAudit_RepeatedControls" xml:space="preserve">
    <value>Wiederholter Posten</value>
  </data>
  <data name="EventAudit_ScoreDuplicateControl" xml:space="preserve">
    <value>Skore Bahn "{0}" enthält Posten "{1}" zweimal. </value>
  </data>
  <data name="EventAudit_Title" xml:space="preserve">
    <value>Wettkampfprüfung für {0}</value>
  </data>
  <data name="EventAudit_UnusedControls" xml:space="preserve">
    <value>Nicht verwendete Posten</value>
  </data>
  <data name="EventAudit_UnusedControlsExplanation" xml:space="preserve">
    <value>Die folgenden Posten aus der Gesamtpostenliste werden in keiner Bahn verwendet.</value>
  </data>
  <data name="EventAudit_Yes" xml:space="preserve">
    <value>Ja</value>
  </data>
  <data name="LegLength_Average" xml:space="preserve">
    <value>Im Durchschnitt</value>
  </data>
  <data name="LegLength_CourseInfo" xml:space="preserve">
    <value>{0} ({1} Posten, {2}, {3} Höhenmeter)</value>
  </data>
  <data name="LegLength_CourseInfoNoClimb" xml:space="preserve">
    <value>{0} ({1} Posten, {2})</value>
  </data>
  <data name="LegLength_Title" xml:space="preserve">
    <value>Liste der Etappenlängen für {0}</value>
  </data>
  <data name="Load_ButterflyExists" xml:space="preserve">
    <value>Einige Posten werden mehrere Male von der gleichen Bahn besucht. Die Nummer 'Besuche' zählt jeden Besuch pro Posten einzeln.</value>
  </data>
  <data name="Load_ControlLoadSection" xml:space="preserve">
    <value>Postenauslastung</value>
  </data>
  <data name="Load_LegLoadSection" xml:space="preserve">
    <value>Etappenauslastung</value>
  </data>
  <data name="Load_MissingLoads" xml:space="preserve">
    <value>Einige oder alle Bahnen haben keine Angabe zur Läuferanzahl. Die Angaben zur Auslastung unten können deshalb fehlerhaft sein. Um die Läuferauslastung festzulegen, wählen Sie bitte "Läuferanzahl" aus dem Menü "Bahnen".</value>
  </data>
  <data name="Load_OnlyLegsMoreThanOnce" xml:space="preserve">
    <value>(In der folgenden Tabelle erscheinen nur Teilstrecken, die von mehr als einer Bahn genutzt werden.)</value>
  </data>
  <data name="Load_Title" xml:space="preserve">
    <value>Zusammenfassung der Läuferauslastung für {0}</value>
  </data>
  <data name="Load_VariationsExist" xml:space="preserve">
    <value>Ein oder mehrer Kurse haben Bahnvarianten. Die Zahlen werden berechnet unter der Annahme, dass die Gabelungen gleichmässig verteilt sind.</value>
  </data>
  <data name="Load_Visit" xml:space="preserve">
    <value>({0} Besuche)</value>
  </data>
  <data name="Load_Warning" xml:space="preserve">
    <value>WARNUNG:</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>BEMERKUNG: </value>
  </data>
  <data name="RelayVariation_BranchWarning" xml:space="preserve">
    <value>Warnung: Aufgrund der Anzahl der Teilstrecken wird die Gabelung bei Posten {0} nicht gleichmäßig genutzt. {1} Teilstrecke(n) nutzen Zweig {2}, und {3} Teilstrecke(n) nutzen Zweig {4}. </value>
  </data>
  <data name="RelayVariation_LegHeader" xml:space="preserve">
    <value>Teilstrecke {0}</value>
  </data>
  <data name="RelayVariation_NoTeams" xml:space="preserve">
    <value>Bislang wurden keine Staffelteams festgelegt. Wählen sie die Anzahl der Teams und Teilstrecken aus und klicken sie auf "Varianten zuweisen".</value>
  </data>
  <data name="RelayVariation_TeamNumber" xml:space="preserve">
    <value>Team {0}</value>
  </data>
  <data name="RelayVariation_Title" xml:space="preserve">
    <value>Staffelzuweisungen for {0}</value>
  </data>
</root>