<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultStatus" xml:space="preserve">
    <value>Butonul stâng mouse: selecție obiect;   Butonul drept mouse: mutare hartă;   Învârtire rotiță mouse: marire/micșorare</value>
  </data>
  <data name="DefaultRectangle" xml:space="preserve">
    <value>Butonul stâng mouse: mutare/dimensionare dreptunghi;   Butonul drept mouse: mutare hartă;   Învârtire rotiță mouse: marire/micșorare</value>
  </data>
  <data name="DragObject" xml:space="preserve">
    <value>Țineți apăsat butonul stâng al mouse-ului și trageți pentru a muta obiectul selectat</value>
  </data>
  <data name="DragCorner" xml:space="preserve">
    <value>Țineți apăsat butonul stâng al mouse-ului și trageți punctele din colțuri pentru al muta</value>
  </data>
  <data name="DraggingObject" xml:space="preserve">
    <value>Mutați obiectul în locația dorită si eliberați butonul mouse-ului</value>
  </data>
  <data name="DraggingCorner" xml:space="preserve">
    <value>Mutați punctul din colț în locația dorită si eliberați butonul mouse-ului</value>
  </data>
  <data name="AddingControl" xml:space="preserve">
    <value>Click butonul stâng mouse pentru a plasa un nou post de control</value>
  </data>
  <data name="AddingExistingControl" xml:space="preserve">
    <value>Click butonul stâng mouse pentru a adăuga la traseu postul de control "{0}"</value>
  </data>
  <data name="AddingStart" xml:space="preserve">
    <value>Click butonul stâng mouse pentru a plasa un nou start</value>
  </data>
  <data name="AddingExistingStart" xml:space="preserve">
    <value>Click butonul stâng mouse pentru a adăuga la traseu un start pre-existent</value>
  </data>
  <data name="AddingFinish" xml:space="preserve">
    <value>Click butonul stâng mouse pentru a plasa o nouă sosire</value>
  </data>
  <data name="AddingExistingFinish" xml:space="preserve">
    <value>Click buton stâng mouse pentru a adăuga la traseu o sosire pre-existentă</value>
  </data>
  <data name="AddingCrossingPoint" xml:space="preserve">
    <value>Click buton stâng mouse pentru a plasa un nou punct de trecere obligatoriu</value>
  </data>
  <data name="AddingExistingCrossingPoint" xml:space="preserve">
    <value>Click buton stâng mouse pentru a adăuga la traseu un punct de trecere obligatoriu pre-existent</value>
  </data>
  <data name="AddingObject" xml:space="preserve">
    <value>Click buton stâng mouse pentru a plasa un nou obiect</value>
  </data>
  <data name="AddingBend" xml:space="preserve">
    <value>Click buton stâng mouse în locația de cotitură</value>
  </data>
  <data name="AddingCorner" xml:space="preserve">
    <value>Click buton stâng mouse pentru a adăuga un nou colț</value>
  </data>
  <data name="DeletingBend" xml:space="preserve">
    <value>Click buton stâng mouse pe cotitură pentru al șterge</value>
  </data>
  <data name="DeletingCorner" xml:space="preserve">
    <value>Click mouse stâng mouse pe un colț pentru al șterge</value>
  </data>
  <data name="RemovingControlGap" xml:space="preserve">
    <value>Click buton stâng mouse pe un spațiu gol în cercul postului de control pentru a șterge golul.</value>
  </data>
  <data name="RemovingLegGap" xml:space="preserve">
    <value>Click buton stâng mouse pe un spațiu gol din secțiune pentru a-l elimina.</value>
  </data>
  <data name="SizeRectangle" xml:space="preserve">
    <value>Țineți apăsat butonul stâng al mouse-ului și trageți pentru a dimensiona obiectul selectat</value>
  </data>
  <data name="SizingRectangle" xml:space="preserve">
    <value>Mutați marginea(marginile) în locația dorită și eliberați butonul mouse-ului</value>
  </data>
  <data name="AddingDescription" xml:space="preserve">
    <value>Țineți apăsat butonul stâng al mouse-ului și trageți pentru a crea descrierea posturilor de control</value>
  </data>
  <data name="RotatingObject" xml:space="preserve">
    <value>Click buton stâng mouse când punctul de intersecție este rotit la unghiul corect</value>
  </data>
  <data name="AddingLineArea" xml:space="preserve">
    <value>Țineți apăsat butonul stâng mouse și trageți pentru a adăuga un segment de linie; click buton stânga mouse pentru a termina adaugarea obiectului</value>
  </data>
  <data name="AddingText" xml:space="preserve">
    <value>Țineți apăsat butonul stâng mouse și trageți pentru a crea textul</value>
  </data>
</root>