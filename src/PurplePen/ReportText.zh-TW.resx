<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ColumnHeader_Climb" xml:space="preserve">
    <value>爬高</value>
  </data>
  <data name="ColumnHeader_Code" xml:space="preserve">
    <value>編號</value>
  </data>
  <data name="ColumnHeader_Column" xml:space="preserve">
    <value>欄</value>
  </data>
  <data name="ColumnHeader_Control" xml:space="preserve">
    <value>檢查點</value>
  </data>
  <data name="ColumnHeader_ControlCodes" xml:space="preserve">
    <value>檢查點編號</value>
  </data>
  <data name="ColumnHeader_Controls" xml:space="preserve">
    <value>檢查點</value>
  </data>
  <data name="ColumnHeader_Course" xml:space="preserve">
    <value>賽程</value>
  </data>
  <data name="ColumnHeader_Courses" xml:space="preserve">
    <value>賽程</value>
  </data>
  <data name="ColumnHeader_Distance" xml:space="preserve">
    <value>距離</value>
  </data>
  <data name="ColumnHeader_Item" xml:space="preserve">
    <value>項目</value>
  </data>
  <data name="ColumnHeader_Leg" xml:space="preserve">
    <value>賽段</value>
  </data>
  <data name="ColumnHeader_Length" xml:space="preserve">
    <value>長度</value>
  </data>
  <data name="ColumnHeader_Load" xml:space="preserve">
    <value>載入</value>
  </data>
  <data name="ColumnHeader_Location" xml:space="preserve">
    <value>位置</value>
  </data>
  <data name="ColumnHeader_NumberOfCourses" xml:space="preserve">
    <value># 賽程</value>
  </data>
  <data name="ColumnHeader_Reason" xml:space="preserve">
    <value>原因</value>
  </data>
  <data name="ColumnHeader_SameSymbol" xml:space="preserve">
    <value>相同的符號?</value>
  </data>
  <data name="ColumnHeader_Visits" xml:space="preserve">
    <value>到訪次數</value>
  </data>
  <data name="CourseSummary_Title" xml:space="preserve">
    <value>{0}的賽程摘要</value>
  </data>
  <data name="CrossRef_Title" xml:space="preserve">
    <value>{0}的檢查點對照</value>
  </data>
  <data name="EventAudit_BothDirectionsLegs" xml:space="preserve">
    <value>賽段往兩個方向跑</value>
  </data>
  <data name="EventAudit_CloseTogetherControls" xml:space="preserve">
    <value>緊靠的檢查點</value>
  </data>
  <data name="EventAudit_CloseTogetherExplanation" xml:space="preserve">
    <value>下表顯示了彼此相距在 {0} 公尺內的所有檢查點。 相同的符號欄顯示兩個檢查點是否具有相同的主要符號（D欄）。</value>
  </data>
  <data name="EventAudit_MissingBoxes" xml:space="preserve">
    <value>缺少說明表格</value>
  </data>
  <data name="EventAudit_MissingClimb" xml:space="preserve">
    <value>正規賽程應註明爬高</value>
  </data>
  <data name="EventAudit_MissingD" xml:space="preserve">
    <value>所有檢查點都必須在 D欄中顯示主要特徵</value>
  </data>
  <data name="EventAudit_MissingEBetween" xml:space="preserve">
    <value>當“兩者之間”出現在 G 欄中時，兩個特徵必須顯示在 D欄 與 E 欄中</value>
  </data>
  <data name="EventAudit_MissingEJunction" xml:space="preserve">
    <value>當“交會處”或“連接處”出現在 F 欄中時，兩個特徵必須顯示在 D 欄與 E 欄中</value>
  </data>
  <data name="EventAudit_MissingFinish" xml:space="preserve">
    <value>正規賽程應該有一個終點</value>
  </data>
  <data name="EventAudit_MissingItems" xml:space="preserve">
    <value>賽程中缺少的項目</value>
  </data>
  <data name="EventAudit_MissingLoad" xml:space="preserve">
    <value>賽程應該有預期的選手負荷量</value>
  </data>
  <data name="EventAudit_MissingPunch" xml:space="preserve">
    <value>未定義打孔圖案</value>
  </data>
  <data name="EventAudit_MissingPunchPatterns" xml:space="preserve">
    <value>缺少打孔圖案</value>
  </data>
  <data name="EventAudit_MissingScore" xml:space="preserve">
    <value>積分賽應該為所有檢查點設置分數或者沒有此檢查點</value>
  </data>
  <data name="EventAudit_MissingScores" xml:space="preserve">
    <value>缺少積分值</value>
  </data>
  <data name="EventAudit_MissingStart" xml:space="preserve">
    <value>正規賽程應該有一個起點三角形圖例</value>
  </data>
  <data name="EventAudit_MissingStartScore" xml:space="preserve">
    <value>積分賽應該有一個起點三角形圖例</value>
  </data>
  <data name="EventAudit_No" xml:space="preserve">
    <value>否</value>
  </data>
  <data name="EventAudit_NoProblems" xml:space="preserve">
    <value>沒有發現問題。</value>
  </data>
  <data name="EventAudit_RepeatControl" xml:space="preserve">
    <value>賽程“{0}”中檢查點“{1}”連續出現兩次。</value>
  </data>
  <data name="EventAudit_RepeatedControls" xml:space="preserve">
    <value>重複的檢查點</value>
  </data>
  <data name="EventAudit_ScoreDuplicateControl" xml:space="preserve">
    <value>積分賽程“{0}”中檢查點“{1}出現兩次”。 </value>
  </data>
  <data name="EventAudit_Title" xml:space="preserve">
    <value>{0} 的賽事檢核</value>
  </data>
  <data name="EventAudit_UnusedControls" xml:space="preserve">
    <value>未使用的檢查點</value>
  </data>
  <data name="EventAudit_UnusedControlsExplanation" xml:space="preserve">
    <value>以下檢查點存在於所有檢查點集合中，但未使用在任何賽程中。要移除它們，請使用“賽事”選單上的“移除未使用的檢查點”指令。這些檢查點將不再出現於此報告中。</value>
  </data>
  <data name="EventAudit_Yes" xml:space="preserve">
    <value>是</value>
  </data>
  <data name="LegLength_Average" xml:space="preserve">
    <value>平均</value>
  </data>
  <data name="LegLength_CourseInfo" xml:space="preserve">
    <value>{0} (檢查點{1}, {2}, {3} 公尺 爬高)</value>
  </data>
  <data name="LegLength_CourseInfoNoClimb" xml:space="preserve">
    <value>{0} (檢查點{1}, {2})</value>
  </data>
  <data name="LegLength_Title" xml:space="preserve">
    <value>{0}的賽段長度報告</value>
  </data>
  <data name="Load_ButterflyExists" xml:space="preserve">
    <value>在同一賽程中會多次到訪某些檢查點。 第二次負荷量將分別計算對檢查點的每次到訪。</value>
  </data>
  <data name="Load_ControlLoadSection" xml:space="preserve">
    <value>檢查點負荷量</value>
  </data>
  <data name="Load_LegLoadSection" xml:space="preserve">
    <value>賽段負荷量</value>
  </data>
  <data name="Load_MissingLoads" xml:space="preserve">
    <value>有些賽程或所有的賽程沒有選手負荷量的設定. 下列的負荷量可能不正確或是因此原因而缺少. 要設定選手負荷量, 請在 "賽程"選單中點選  " 選手負荷量 " .</value>
  </data>
  <data name="Load_OnlyLegsMoreThanOnce" xml:space="preserve">
    <value>(下表只有顯示兩個以上之賽程使用的賽段)</value>
  </data>
  <data name="Load_Title" xml:space="preserve">
    <value>{0}的選手負荷量摘要</value>
  </data>
  <data name="Load_VariationsExist" xml:space="preserve">
    <value>一組或多組賽程有分散變化。 將以選手均勻分佈在分叉之間來計算負荷數量。</value>
  </data>
  <data name="Load_Visit" xml:space="preserve">
    <value>(到訪{0}次)</value>
  </data>
  <data name="Load_Warning" xml:space="preserve">
    <value>警告：</value>
  </data>
  <data name="Note" xml:space="preserve">
    <value>注意: </value>
  </data>
  <data name="RelayVariation_BranchWarning" xml:space="preserve">
    <value>警告：由於賽段的數量有指定，檢查點 {0} 的分叉將不會被採用。賽段 {1} 將採用分支{2}，而賽段 {3} 將使用分支{4}。 </value>
  </data>
  <data name="RelayVariation_LegHeader" xml:space="preserve">
    <value>賽段 {0}</value>
  </data>
  <data name="RelayVariation_NoTeams" xml:space="preserve">
    <value>接力隊伍還沒有定義. 選擇需要的隊伍數量與棒次，然後按下 "分配分散變化" 鍵。</value>
  </data>
  <data name="RelayVariation_TeamNumber" xml:space="preserve">
    <value>隊伍 {0}</value>
  </data>
  <data name="RelayVariation_Title" xml:space="preserve">
    <value>接力分配至 {0}</value>
  </data>
</root>