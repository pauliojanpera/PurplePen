<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AwayFromControl" xml:space="preserve">
    <value>lejos del control</value>
  </data>
  <data name="Climb" xml:space="preserve">
    <value>Desnivel:</value>
  </data>
  <data name="CompetitorLoad" xml:space="preserve">
    <value>Densidad de corredores:</value>
  </data>
  <data name="ControlsInUse" xml:space="preserve">
    <value>Controles en uso:</value>
  </data>
  <data name="ControlsNotInUse" xml:space="preserve">
    <value>Controles no usados:</value>
  </data>
  <data name="Control_Plural" xml:space="preserve">
    <value>controles</value>
  </data>
  <data name="Control_Singular" xml:space="preserve">
    <value>control</value>
  </data>
  <data name="CourseList_AllCourses" xml:space="preserve">
    <value>Todos los recorridos</value>
  </data>
  <data name="CourseList_None" xml:space="preserve">
    <value>Ninguno</value>
  </data>
  <data name="CourseName" xml:space="preserve">
    <value>Recorrido «{0}»</value>
  </data>
  <data name="CustomizedSymbolDesc" xml:space="preserve">
    <value>Descripción de símbolos personalizada</value>
  </data>
  <data name="EntireLeg" xml:space="preserve">
    <value>tramo entero</value>
  </data>
  <data name="FinishFunnel" xml:space="preserve">
    <value>embudo de meta</value>
  </data>
  <data name="Finish_Plural" xml:space="preserve">
    <value>metas</value>
  </data>
  <data name="Finish_Singular" xml:space="preserve">
    <value>meta</value>
  </data>
  <data name="Flagging" xml:space="preserve">
    <value>Balizados:</value>
  </data>
  <data name="IntoControl" xml:space="preserve">
    <value>hasta el control</value>
  </data>
  <data name="IntoFinishFunnel" xml:space="preserve">
    <value>hasta el embudo de meta</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>Longitud:</value>
  </data>
  <data name="LineHeight" xml:space="preserve">
    <value>Altura de la línea:</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Localización:</value>
  </data>
  <data name="MandCrossing_Plural" xml:space="preserve">
    <value>puntos de paso obligatorios</value>
  </data>
  <data name="MandCrossing_Singular" xml:space="preserve">
    <value>punto de paso obligatorio</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>ninguno</value>
  </data>
  <data name="SpecialName_Boundary" xml:space="preserve">
    <value>Límite infranqueable</value>
  </data>
  <data name="SpecialName_CourseName" xml:space="preserve">
    <value>Nombre del recorrido</value>
  </data>
  <data name="SpecialName_Dangerous" xml:space="preserve">
    <value>Área peligrosa</value>
  </data>
  <data name="SpecialName_Descriptions" xml:space="preserve">
    <value>Descripciones de controles</value>
  </data>
  <data name="SpecialName_FirstAid" xml:space="preserve">
    <value>Punto de primeros auxilios</value>
  </data>
  <data name="SpecialName_Image" xml:space="preserve">
    <value>Imagen</value>
  </data>
  <data name="SpecialName_Forbidden" xml:space="preserve">
    <value>Ruta prohibida</value>
  </data>
  <data name="SpecialName_OOB" xml:space="preserve">
    <value>Área fuera de carrera</value>
  </data>
  <data name="SpecialName_OptCrossing" xml:space="preserve">
    <value>Punto de paso opcional</value>
  </data>
  <data name="SpecialName_RegMark" xml:space="preserve">
    <value>Marcas de registro</value>
  </data>
  <data name="SpecialName_Text" xml:space="preserve">
    <value>Texto</value>
  </data>
  <data name="SpecialName_Water" xml:space="preserve">
    <value>Punto de avituallamiento</value>
  </data>
  <data name="Start_Plural" xml:space="preserve">
    <value>salidas</value>
  </data>
  <data name="Start_Singular" xml:space="preserve">
    <value>salida</value>
  </data>
  <data name="TextDescription" xml:space="preserve">
    <value>Descripción de texto:</value>
  </data>
  <data name="TextLine" xml:space="preserve">
    <value>Línea de texto</value>
  </data>
  <data name="TextLine_AboveAllCourses" xml:space="preserve">
    <value>Aparece sobre {0}, en todos los recorridos que contiene {0}</value>
  </data>
  <data name="TextLine_AboveThisCourse" xml:space="preserve">
    <value>Aparece encima {0}, solo en este recorrido</value>
  </data>
  <data name="TextLine_BelowAllCourses" xml:space="preserve">
    <value>Appears debajo {0}, en todas los recorridos que contiene {0}</value>
  </data>
  <data name="TextLine_BelowThisCourse" xml:space="preserve">
    <value>Aparece debajo {0}, solo en este recorrido</value>
  </data>
  <data name="TotalControls" xml:space="preserve">
    <value>Controles totales:</value>
  </data>
  <data name="TotalScore" xml:space="preserve">
    <value>Puntuación total:</value>
  </data>
  <data name="UsedInCourses" xml:space="preserve">
    <value>Usado en recorridos:</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>Nombre:</value>
  </data>
  <data name="SpecialName_WhiteOut" xml:space="preserve">
    <value>Área con fondo blanco</value>
  </data>
  <data name="MapExchange_Plural" xml:space="preserve">
    <value>cambios de mapa</value>
  </data>
  <data name="MapExchange_Singular" xml:space="preserve">
    <value>cambio de mapa</value>
  </data>
  <data name="MapExchangeAtControl" xml:space="preserve">
    <value>Cambio de mapa en {0}</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>Carga:</value>
  </data>
  <data name="UsedIn" xml:space="preserve">
    <value>Usado en:</value>
  </data>
  <data name="CourseNameAndPart" xml:space="preserve">
    <value>Recorrido «{0}», sección {1}</value>
  </data>
  <data name="SpecialName_Line" xml:space="preserve">
    <value>Línea</value>
  </data>
  <data name="SpecialName_Rectangle" xml:space="preserve">
    <value>Rectángulo</value>
  </data>
  <data name="CalculatedLength" xml:space="preserve">
    <value>Longitud calculada:</value>
  </data>
  <data name="MapIssue_Plural" xml:space="preserve">
    <value>puntos de entrega de mapas</value>
  </data>
  <data name="MapIssue_Singular" xml:space="preserve">
    <value>punto de entrega de mapa</value>
  </data>
</root>