<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AwayFromControl" xml:space="preserve">
    <value>离开检查点</value>
  </data>
  <data name="Climb" xml:space="preserve">
    <value>爬高量：</value>
  </data>
  <data name="CompetitorLoad" xml:space="preserve">
    <value>竞争对手的负荷：</value>
  </data>
  <data name="ControlsInUse" xml:space="preserve">
    <value>使用中的检查点：</value>
  </data>
  <data name="ControlsNotInUse" xml:space="preserve">
    <value>对照组不使用：</value>
  </data>
  <data name="Control_Plural" xml:space="preserve">
    <value>检查点</value>
  </data>
  <data name="Control_Singular" xml:space="preserve">
    <value>检查点</value>
  </data>
  <data name="CourseList_AllCourses" xml:space="preserve">
    <value>所有的线路</value>
  </data>
  <data name="CourseList_None" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="CourseName" xml:space="preserve">
    <value>线路 "{0}"</value>
  </data>
  <data name="CustomizedSymbolDesc" xml:space="preserve">
    <value>定制符号说明</value>
  </data>
  <data name="EntireLeg" xml:space="preserve">
    <value>整个课程</value>
  </data>
  <data name="FinishFunnel" xml:space="preserve">
    <value>完成漏斗</value>
  </data>
  <data name="Finish_Plural" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="Finish_Singular" xml:space="preserve">
    <value>完成</value>
  </data>
  <data name="Flagging" xml:space="preserve">
    <value>flagging：</value>
  </data>
  <data name="IntoControl" xml:space="preserve">
    <value>到达检查点</value>
  </data>
  <data name="IntoFinishFunnel" xml:space="preserve">
    <value>为完成漏斗</value>
  </data>
  <data name="Length" xml:space="preserve">
    <value>长度：</value>
  </data>
  <data name="LineHeight" xml:space="preserve">
    <value>线高：</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>位置：</value>
  </data>
  <data name="MandCrossing_Plural" xml:space="preserve">
    <value>必经通过点</value>
  </data>
  <data name="MandCrossing_Singular" xml:space="preserve">
    <value>必经通过点</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="SpecialName_Boundary" xml:space="preserve">
    <value>不可通过边界</value>
  </data>
  <data name="SpecialName_CourseName" xml:space="preserve">
    <value>线路名称</value>
  </data>
  <data name="SpecialName_Dangerous" xml:space="preserve">
    <value>危险路段</value>
  </data>
  <data name="SpecialName_Descriptions" xml:space="preserve">
    <value>检查点说明</value>
  </data>
  <data name="SpecialName_FirstAid" xml:space="preserve">
    <value>急救的位置</value>
  </data>
  <data name="SpecialName_Image" xml:space="preserve">
    <value>图像</value>
  </data>
  <data name="SpecialName_Forbidden" xml:space="preserve">
    <value>禁止的线路</value>
  </data>
  <data name="SpecialName_OOB" xml:space="preserve">
    <value>禁区</value>
  </data>
  <data name="SpecialName_OptCrossing" xml:space="preserve">
    <value>可选通过点</value>
  </data>
  <data name="SpecialName_RegMark" xml:space="preserve">
    <value>注册标记</value>
  </data>
  <data name="SpecialName_Text" xml:space="preserve">
    <value>文本</value>
  </data>
  <data name="SpecialName_Water" xml:space="preserve">
    <value>水站</value>
  </data>
  <data name="Start_Plural" xml:space="preserve">
    <value>开始</value>
  </data>
  <data name="Start_Singular" xml:space="preserve">
    <value>起点</value>
  </data>
  <data name="TextDescription" xml:space="preserve">
    <value>文字说明：</value>
  </data>
  <data name="TextLine" xml:space="preserve">
    <value>文本行</value>
  </data>
  <data name="TextLine_AboveAllCourses" xml:space="preserve">
    <value>出现在{0}上方，包含{0}的所有线路中</value>
  </data>
  <data name="TextLine_AboveThisCourse" xml:space="preserve">
    <value>出现在{0}上方，仅在本线路中</value>
  </data>
  <data name="TextLine_BelowAllCourses" xml:space="preserve">
    <value>出现在{0}下面，包含{0}的所有线路中</value>
  </data>
  <data name="TextLine_BelowThisCourse" xml:space="preserve">
    <value>出现在{0}下面，仅在本线路中</value>
  </data>
  <data name="TotalControls" xml:space="preserve">
    <value>总检查点：</value>
  </data>
  <data name="TotalScore" xml:space="preserve">
    <value>总得分：</value>
  </data>
  <data name="UsedInCourses" xml:space="preserve">
    <value>用于线路：</value>
  </data>
  <data name="FileName" xml:space="preserve">
    <value>名称：</value>
  </data>
  <data name="SpecialName_WhiteOut" xml:space="preserve">
    <value>白色外部区域</value>
  </data>
  <data name="MapExchange_Plural" xml:space="preserve">
    <value>换图</value>
  </data>
  <data name="MapExchange_Singular" xml:space="preserve">
    <value>换图</value>
  </data>
  <data name="MapExchangeAtControl" xml:space="preserve">
    <value>在{0}换图</value>
  </data>
  <data name="Load" xml:space="preserve">
    <value>负荷：</value>
  </data>
  <data name="UsedIn" xml:space="preserve">
    <value>用于：</value>
  </data>
  <data name="CourseNameAndPart" xml:space="preserve">
    <value>线路{0}，部分{1}</value>
  </data>
  <data name="SpecialName_Line" xml:space="preserve">
    <value>直线</value>
  </data>
  <data name="SpecialName_Rectangle" xml:space="preserve">
    <value>矩形</value>
  </data>
  <data name="CalculatedLength" xml:space="preserve">
    <value>计算长度：</value>
  </data>
  <data name="MapIssue_Plural" xml:space="preserve">
    <value>地图关键点</value>
  </data>
  <data name="MapIssue_Singular" xml:space="preserve">
    <value>地图关键点</value>
  </data>
  <data name="MapFlipAtControl" xml:space="preserve">
    <value>在{0}进行地图切换</value>
  </data>
</root>