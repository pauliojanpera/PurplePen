<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultStatus" xml:space="preserve">
    <value>滑鼠左鍵：選取物件；滑鼠右鍵：移動地圖；滾輪：放大/縮小</value>
  </data>
  <data name="DefaultRectangle" xml:space="preserve">
    <value>滑鼠左鍵：移動/調整矩形；滑鼠右鍵：移動地圖；滾輪：放大/縮小</value>
  </data>
  <data name="DragObject" xml:space="preserve">
    <value>按住滑鼠左鍵並拖曳以移動所選物件</value>
  </data>
  <data name="DragCorner" xml:space="preserve">
    <value>按住滑鼠左鍵並拖曳轉角點來移動它</value>
  </data>
  <data name="DraggingObject" xml:space="preserve">
    <value>將物件移動到所需位置並釋放滑鼠按鍵</value>
  </data>
  <data name="DraggingCorner" xml:space="preserve">
    <value>將轉角點移動到所需位置並釋放滑鼠按鍵</value>
  </data>
  <data name="AddingControl" xml:space="preserve">
    <value>單擊滑鼠左鍵設置新的檢查點</value>
  </data>
  <data name="AddingExistingControl" xml:space="preserve">
    <value>單擊滑鼠左鍵將現有檢查點“{0}”新增到賽程</value>
  </data>
  <data name="AddingStart" xml:space="preserve">
    <value>單擊滑鼠左鍵設置新的起點</value>
  </data>
  <data name="AddingExistingStart" xml:space="preserve">
    <value>單擊滑鼠左鍵新增既有的起點至賽程</value>
  </data>
  <data name="AddingFinish" xml:space="preserve">
    <value>單擊滑鼠左鍵設置新的終點</value>
  </data>
  <data name="AddingExistingFinish" xml:space="preserve">
    <value>單擊滑鼠左鍵新增既有的終點至賽程</value>
  </data>
  <data name="AddingCrossingPoint" xml:space="preserve">
    <value>單擊滑鼠左鍵設置新的強制穿越點</value>
  </data>
  <data name="AddingExistingCrossingPoint" xml:space="preserve">
    <value>點擊滑鼠左鍵一次以新增現有的強制穿越點至賽程中</value>
  </data>
  <data name="AddingObject" xml:space="preserve">
    <value>點擊滑鼠左鍵一次以設置新的物件</value>
  </data>
  <data name="AddingBend" xml:space="preserve">
    <value>在轉彎處的位置點擊滑鼠左鍵一次</value>
  </data>
  <data name="AddingCorner" xml:space="preserve">
    <value>點擊滑鼠左鍵一次以增加新的轉角</value>
  </data>
  <data name="DeletingBend" xml:space="preserve">
    <value>在轉彎處點擊滑鼠左鍵一次以移除轉彎</value>
  </data>
  <data name="DeletingCorner" xml:space="preserve">
    <value>在轉角點擊滑鼠左鍵一次以移除轉角</value>
  </data>
  <data name="AddingControlGap" xml:space="preserve">
    <value>在檢查點圓圈上點擊滑鼠左鍵一次以增加小的間隔；按住滑鼠左鍵並且拖曳可建立較大的間隔</value>
  </data>
  <data name="RemovingControlGap" xml:space="preserve">
    <value>在檢查點圓圈上的間隔上點擊滑鼠左鍵一次可移除間隔</value>
  </data>
  <data name="AddingLegGap" xml:space="preserve">
    <value>在賽段上點擊滑鼠左鍵一次以建立小的間隔；按住滑鼠左鍵並且拖曳可建立較大的間隔</value>
  </data>
  <data name="RemovingLegGap" xml:space="preserve">
    <value>在賽段的間隔上點擊滑鼠左鍵一次可移除間隔</value>
  </data>
  <data name="SizeRectangle" xml:space="preserve">
    <value>按住滑鼠左鍵並且拖曳以調整所選物件的大小</value>
  </data>
  <data name="SizingRectangle" xml:space="preserve">
    <value>將邊緣移至想要的位置並且放開滑鼠按鍵</value>
  </data>
  <data name="AddingDescription" xml:space="preserve">
    <value>按住滑鼠左鍵並且拖曳動以建立檢查點說明</value>
  </data>
  <data name="RotatingObject" xml:space="preserve">
    <value>當穿越點旋轉至正確的角度時單擊滑鼠左鍵</value>
  </data>
  <data name="AddingLineArea" xml:space="preserve">
    <value>按住滑鼠左鍵並拖曳以新增一條線段；單擊滑鼠左鍵以完成新增物件</value>
  </data>
  <data name="AddingText" xml:space="preserve">
    <value>按住滑鼠左鍵並拖曳以建立文字</value>
  </data>
  <data name="AddingExistingMapExchange" xml:space="preserve">
    <value>按滑鼠左鍵一次以增加已有的換圖區至賽程中</value>
  </data>
  <data name="AddingMapExchange" xml:space="preserve">
    <value>按滑鼠左鍵一次以設置新的換圖區</value>
  </data>
  <data name="AddingMapExchangeToControl" xml:space="preserve">
    <value>按滑鼠左鍵一次以在檢查點增加換圖區 "{0}" </value>
  </data>
  <data name="AddingRectangle" xml:space="preserve">
    <value>按住滑鼠左鍵並且拖曳以建立物件</value>
  </data>
  <data name="DraggingTopologyObject" xml:space="preserve">
    <value>在賽程中拖曳檢查點序號以重新排序 (按住shift鍵可直接複製)</value>
  </data>
  <data name="AddingExistingMapIssue" xml:space="preserve">
    <value>點擊滑鼠左鍵一次以新增現有的取圖點至賽程中</value>
  </data>
  <data name="AddingMapIssue" xml:space="preserve">
    <value>點擊滑鼠左鍵一次以設置新的取圖點</value>
  </data>
  <data name="StretchingObject" xml:space="preserve">
    <value>按住滑鼠左鍵並拖曳縮放十字標記來放大</value>
  </data>
</root>